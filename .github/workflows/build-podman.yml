---
name: Continuous Integration Build â€“ Podman

on:
    push:
        branches:
            - main
        paths-ignore:
            - '.github/**'
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        continue-on-error: ${{ matrix.java.continue-on-error == true }}
        strategy:
            matrix:
                java: [
                    {
                        'name': '',
                        'version': '17',
                    },
                    {
                        'name': '',
                        'version': '21',
                    },
                    {
                        'name': '',
                        'version': '23',
                    }
                ]
        name: Build with Java ${{ matrix.java.version }} ${{ matrix.java.name }}
        steps:
            -   name: Update podman
                run: |
                    sudo apt-get -y purge podman
                    sudo mkdir -p /etc/apt/keyrings
                    curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/Release.key | gpg --dearmor | sudo tee /etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg > /dev/null
                    echo \
                      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/devel_kubic_libcontainers_unstable.gpg] \
                      https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_$(lsb_release -rs)/ /" \
                      | sudo tee /etc/apt/sources.list.d/devel:kubic:libcontainers:unstable.list > /dev/null
                    sudo apt-get update -qq
                    sudo apt-get -qq -y install podman
                    sudo bash -c "echo -e '[engine]\nservice_timeout=0' >> /etc/containers/containers.conf"
                    systemctl --user enable podman.socket
                    systemctl --user start podman.socket
            -   name: Setup docker host
                run: echo "DOCKER_HOST=$(podman info --format 'unix://{{.Host.RemoteSocket.Path}}')" >> "$GITHUB_ENV"
            -   name: Check podman
                run: |
                    podman version
                    docker version
            -   name: Set up testcontainers for podman
                run: |
                    echo ryuk.container.privileged=true > ~/.testcontainers.properties
            -   uses: actions/checkout@v4
            -   uses: actions/setup-java@v4
                with:
                    java-version: ${{ matrix.java.version }}
                    distribution: temurin
                    cache: maven
            -   name: Build with Maven
                env:
                    MAVEN_OPTS: ${{ matrix.java.opts }}
                run: |
                    mvn -s .build/ci-maven-settings.xml -Dmaven.resolver.transport=wagon -B \
                      clean install -Dtest-containers=true ${{ matrix.java.build_opts }}
