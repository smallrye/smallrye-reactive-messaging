<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.smallrye</groupId>
    <artifactId>smallrye-parent</artifactId>
    <version>23</version>
  </parent>

  <groupId>io.smallrye.reactive</groupId>
  <artifactId>smallrye-reactive-messaging</artifactId>
  <version>2.6.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>SmallRye Reactive Messaging</name>

  <description>An implementation of the MicroProfile Reactive Streams Messaging specification</description>
  <url>http://smallrye.io</url>

  <inceptionYear>2018</inceptionYear>
  <organization>
    <name>SmallRye</name>
    <url>https://wwww.smallrye.io</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>cescoffier</id>
      <name>Clement Escoffier</name>
      <email>clement[AT]apache[DOT]org</email>
      <url>https://github.com/cescoffier</url>
    </developer>
  </developers>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/smallrye/smallrye-reactive-messaging/issues</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git@github.com:smallrye/smallrye-reactive-messaging.git</connection>
    <developerConnection>scm:git:git@github.com:smallrye/smallrye-reactive-messaging.git</developerConnection>
    <url>https://github.com/smallrye/smallrye-reactive-messaging</url>
    <tag>HEAD</tag>
  </scm>


  <properties>
    <vertx.version>3.9.4</vertx.version>
    <rxjava.version>2.2.20</rxjava.version>
    <cloudevent.version>1.1.0</cloudevent.version>
    <weld.version>3.1.3.Final</weld.version>
    <camel.version>3.6.0</camel.version>

    <microprofile-reactive-messaging.version>1.0</microprofile-reactive-messaging.version>
    <microprofile-reactive-streams.version>1.0.1</microprofile-reactive-streams.version>
    <microprofile-config.version>2.0</microprofile-config.version>
    <microprofile-metrics-api.version>2.3.2</microprofile-metrics-api.version>
    <microprofile-health-api.version>2.2</microprofile-health-api.version>

    <smallrye-config.version>1.9.3</smallrye-config.version>
    <smallrye-metrics.version>2.4.4</smallrye-metrics.version>
    <smallrye-common.version>1.5.0</smallrye-common.version>
    <smallrye-health.version>2.2.5</smallrye-health.version>
    <smallrye-testing.version>0.1.0</smallrye-testing.version>

    <mutiny.version>0.11.0</mutiny.version>
    <artemis.version>2.16.0</artemis.version>

    <jboss-log-manager.version>2.1.17.Final</jboss-log-manager.version>

    <opentelemetry.version>0.9.1</opentelemetry.version>

    <smallrye-reactive-converter-api.version>1.2.2</smallrye-reactive-converter-api.version>
    <smallrye-vertx-mutiny-clients.version>1.2.2</smallrye-vertx-mutiny-clients.version>

    <testcontainers.version>1.15.0</testcontainers.version>

    <sonar.coverage.jacoco.xmlReportPaths>${project.basedir}/target/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <mockito.version>1.10.19</mockito.version>
    <junit-pioneer.version>1.1.0</junit-pioneer.version>
    <junit-platform-commons.version>1.7.0</junit-platform-commons.version>
  </properties>

  <modules>
    <module>api</module>
    <module>smallrye-reactive-messaging-provider</module>
    <module>smallrye-reactive-messaging-in-memory</module>
    <module>smallrye-reactive-messaging-kafka</module>
    <module>smallrye-reactive-messaging-mqtt</module>
    <module>smallrye-reactive-messaging-mqtt-server</module>
    <module>smallrye-reactive-messaging-camel</module>
    <module>smallrye-reactive-messaging-amqp</module>
    <module>smallrye-reactive-messaging-http</module>
    <module>smallrye-reactive-messaging-vertx-eventbus</module>
    <module>smallrye-reactive-messaging-aws-sns</module>
    <module>smallrye-reactive-messaging-cloud-events</module>
    <module>smallrye-reactive-messaging-jms</module>
    <module>smallrye-reactive-messaging-gcp-pubsub</module>
    <module>smallrye-reactive-messaging-health</module>

    <module>examples/quickstart</module>
    <module>examples/cloud-events</module>

    <module>examples/kafka-quickstart</module>
    <module>examples/kafka-quickstart-kotlin</module>
    <module>examples/mqtt-quickstart</module>
    <module>examples/mqtt-server-quickstart</module>
    <module>examples/amqp-quickstart</module>
    <module>examples/awssns-quickstart</module>
    <module>examples/gcp-pubsub-quickstart</module>

    <module>smallrye-connector-attribute-processor</module>

    <module>tck</module>
    <module>documentation</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.vertx</groupId>
        <artifactId>vertx-stack-depchain</artifactId>
        <version>${vertx.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
        <artifactId>microprofile-reactive-messaging-api</artifactId>
        <version>${microprofile-reactive-messaging.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
        <artifactId>microprofile-reactive-streams-operators-api</artifactId>
        <version>${microprofile-reactive-streams.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
        <artifactId>microprofile-reactive-streams-operators-core</artifactId>
        <version>${microprofile-reactive-streams.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.config</groupId>
        <artifactId>microprofile-config-api</artifactId>
        <version>${microprofile-config.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.eclipse.microprofile.metrics</groupId>
        <artifactId>microprofile-metrics-api</artifactId>
        <version>${microprofile-metrics-api.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>io.smallrye.config</groupId>
        <artifactId>smallrye-config</artifactId>
        <version>${smallrye-config.version}</version>
      </dependency>
      <dependency>
        <groupId>io.smallrye.common</groupId>
        <artifactId>smallrye-common-annotation</artifactId>
        <version>${smallrye-common.version}</version>
      </dependency>
      <dependency>
        <groupId>io.smallrye.testing</groupId>
        <artifactId>smallrye-testing-utilities</artifactId>
        <version>${smallrye-testing.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>io.smallrye</groupId>
        <artifactId>smallrye-metrics</artifactId>
        <version>${smallrye-metrics.version}</version>
      </dependency>

      <dependency>
        <groupId>org.eclipse.microprofile.health</groupId>
        <artifactId>microprofile-health-api</artifactId>
        <version>${microprofile-health-api.version}</version>
      </dependency>

      <dependency>
        <groupId>io.smallrye</groupId>
        <artifactId>smallrye-health</artifactId>
        <version>${smallrye-health.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>io.smallrye.reactive</groupId>
        <artifactId>smallrye-mutiny-vertx-core</artifactId>
        <version>${smallrye-vertx-mutiny-clients.version}</version>
      </dependency>

      <dependency>
        <groupId>io.reactivex.rxjava2</groupId>
        <artifactId>rxjava</artifactId>
        <version>${rxjava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.logmanager</groupId>
        <artifactId>jboss-logmanager</artifactId>
        <version>${jboss-log-manager.version}</version>
      </dependency>

      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-api</artifactId>
        <version>${opentelemetry.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-sdk</artifactId>
        <version>${opentelemetry.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opentelemetry</groupId>
        <artifactId>opentelemetry-exporters-inmemory</artifactId>
        <version>${opentelemetry.version}</version>
      </dependency>

      <!-- From this project -->
      <dependency>
        <groupId>io.smallrye.reactive</groupId>
        <artifactId>smallrye-reactive-messaging-api</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging-processor</artifactId>
    </dependency>

    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-converter-api</artifactId>
      <version>${smallrye-reactive-converter-api.version}</version>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>mutiny</artifactId>
      <version>${mutiny.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.jboss.weld.se</groupId>
      <artifactId>weld-se-core</artifactId>
      <version>${version.weld.core}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>mutiny-reactive-streams-operators</artifactId>
      <version>${mutiny.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-converter-rxjava2</artifactId>
      <version>${smallrye-reactive-converter-api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-converter-reactor</artifactId>
      <version>${smallrye-reactive-converter-api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-reactive-converter-mutiny</artifactId>
      <version>${smallrye-reactive-converter-api.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
      <version>${version.junit5}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <version>${junit-pioneer.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <version>${junit-platform-commons.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean install</defaultGoal>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <phase>generate-test-resources</phase>
              <configuration>
                <destFile>${project.build.directory}/jacoco.exec</destFile>
                <propertyName>jacocoArgLine</propertyName>
                <append>true</append>
              </configuration>
            </execution>
            <execution>
              <id>generate-report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>aggregate</goal>
            </goals>
            <configuration>
              <outputDirectory>documentation/target/apidocs</outputDirectory>
              <reportOutputDirectory>documentation/target/apidocs</reportOutputDirectory>
              <excludePackageNames>*.quickstart:*.example:*.snippets</excludePackageNames>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <additionalOptions>-Xdoclint:none</additionalOptions>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>microprofile-snapshots</id>
      <url>https://repo.eclipse.org/content/repositories/microprofile-snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>release</id>
      <modules>
        <module>release</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>coverage</id>
      <properties>
        <argLine>@{jacocoArgLine}</argLine>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
